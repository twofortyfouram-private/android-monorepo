/*
 * android-assertion
 * https://github.com/twofortyfouram/android-monorepo
 * Copyright (C) 2008â€“2018 two forty four a.m. LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use
 * this file except in compliance with the License. You may obtain a copy of the
 * License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed
 * under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 */

boolean is_dexguard = Boolean.parseBoolean(IS_DEXGUARD_ENABLED)
boolean is_test_orchestrator = Boolean.parseBoolean(IS_USE_TEST_ORCHESTRATOR)

apply plugin: 'com.android.library'
apply from: '../scripts.gradle'

apply plugin: 'maven'
group = 'com.twofortyfouram'
archivesBaseName = 'android-assertion'
version = LIBRARY_VERSION_NAME

dependencies {
    implementation("net.jcip:jcip-annotations:${JCIP_ANNOTATION_VERSION_MATCHER}")
    implementation("androidx.annotation:annotation:${ANDROID_ANNOTATION_VERSION_MATCHER}")
    implementation(project(":annotationLib"))

    androidTestImplementation("androidx.test:core:${ANDROID_TEST_CORE_VERSION_MATCHER}")
    androidTestImplementation("androidx.test.espresso:espresso-core:${ESPRESSO_VERSION_MATCHER}")
    androidTestImplementation("androidx.test.ext:junit:${ANDROID_TEST_JUNIT_VERSION_MATCHER}")

    if (is_test_orchestrator) {
        androidTestUtil group:'androidx.test', name:'orchestrator', version:"${ANDROID_TEST_ORCHESTRATOR_VERSION_MATCHER}", ext:'apk'
    }
}

android {
    compileSdkVersion ANDROID_COMPILE_SDK_VERSION.isInteger() ? Integer.parseInt(ANDROID_COMPILE_SDK_VERSION) : ANDROID_COMPILE_SDK_VERSION

    resourcePrefix 'com_twofortyfouram_assertion_'

    defaultConfig {
        minSdkVersion ANDROID_MIN_SDK_VERSION.isInteger() ? Integer.parseInt(ANDROID_MIN_SDK_VERSION) : ANDROID_MIN_SDK_VERSION
        targetSdkVersion ANDROID_TARGET_SDK_VERSION.isInteger() ? Integer.parseInt(ANDROID_TARGET_SDK_VERSION) : ANDROID_TARGET_SDK_VERSION
        versionCode Integer.parseInt(LIBRARY_VERSION_CODE)
        versionName LIBRARY_VERSION_NAME
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        consumerProguardFiles 'proguard-consumer.txt'
        if (is_dexguard) {
            // This is additive; it doesn't replace but instead appends the AAR's embedded proguard config
            consumerProguardFiles 'dexguard-consumer.txt'
        }
        if (is_test_orchestrator) {
            testInstrumentationRunnerArguments clearPackageData: 'true'
        }
    }

    lintOptions {
        lintConfig file("lint.xml")
        checkDependencies Boolean.parseBoolean(IS_LINT_CHECK_DEPENDENCIES)
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        debug {
            testCoverageEnabled Boolean.parseBoolean(IS_COVERAGE_ENABLED)
        }
    }

    signingConfigs {
        debug {
            storeFile file("${rootProject.projectDir}/tools/debug.keystore")
        }
    }

    testOptions {
        animationsDisabled true
        if (is_test_orchestrator) {
            execution "ANDROIDX_TEST_ORCHESTRATOR"
        }
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: 'https://api.bintray.com/maven/twofortyfouram/maven/android-assertion') {
                authentication(userName: TWOFORTYFOURAM_MONOREPO_MAVEN_USERNAME, password: TWOFORTYFOURAM_MONOREPO_MAVEN_PASSWORD)
            }
            pom.project {
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }
            }
        }
    }
}

// Workaround for naming conflict between maven and android plugins
// http://stackoverflow.com/questions/18559932/gradle-maven-plugin-install-task-does-not-work-with-android-library-project
task installArchives(type: Upload) {
    description "Installs artifacts to mavenLocal."
    repositories.mavenInstaller {
        configuration = configurations.default
    }
}

android.libraryVariants.all { variant ->
    createJavaDocTaskForVariant(variant, "com/twofortyfouram/assertion", "com_twofortyfouram_assertion")
}
