/*
 * android-memento
 * https://github.com/twofortyfouram/android-monorepo
 * Copyright (C) 2008â€“2018 two forty four a.m. LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use
 * this file except in compliance with the License. You may obtain a copy of the
 * License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed
 * under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 */


boolean is_test_orchestrator = Boolean.parseBoolean(isUseTestOrchestrator)

apply plugin: "com.android.library"
apply plugin: "kotlin-android"
apply from: "../scripts.gradle"

apply plugin: "maven"
group = "com.twofortyfouram"
archivesBaseName = "android-memento-api"
version = LIBRARY_VERSION_NAME

dependencies {
    compileOnly("androidx.lifecycle:lifecycle-livedata-core:${ANDROID_LIFECYCLE_VERSION_MATCHER}")

    api("androidx.sqlite:sqlite:${ANDROID_DATABASE_VERSION_MATCHER}")
    implementation("androidx.annotation:annotation:${ANDROID_ANNOTATION_VERSION_MATCHER}")
    implementation("net.jcip:jcip-annotations:${JCIP_ANNOTATION_VERSION_MATCHER}")
    implementation(project(':annotationLib'))
    implementation(project(':assertionLib'))
    implementation(project(':spackleLib'))

    androidTestImplementation("androidx.sqlite:sqlite-framework:${ANDROID_DATABASE_VERSION_MATCHER}")
    androidTestImplementation("androidx.lifecycle:lifecycle-livedata-core:${ANDROID_LIFECYCLE_VERSION_MATCHER}")

    androidTestImplementation("androidx.test:core:${ANDROID_TEST_CORE_VERSION_MATCHER}")
    androidTestImplementation("androidx.test.espresso:espresso-core:${ESPRESSO_VERSION_MATCHER}")
    androidTestImplementation("androidx.test.ext:junit:${ANDROID_TEST_JUNIT_VERSION_MATCHER}")
    androidTestImplementation(project(':testLib'))

    if (is_test_orchestrator) {
        androidTestUtil group:"androidx.test", name:"orchestrator", version:"${ANDROID_TEST_ORCHESTRATOR_VERSION_MATCHER}", ext:"apk"
    }
}

android {
    resourcePrefix "com_twofortyfouram_memento_api_"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
        allWarningsAsErrors = true
    }

    lintOptions {
        lintConfig file("lint.xml")
        checkDependencies Boolean.parseBoolean(IS_LINT_CHECK_DEPENDENCIES)
    }
    
    testOptions {
        animationsDisabled true
        if (is_test_orchestrator) {
            execution "ANDROIDX_TEST_ORCHESTRATOR"
        }
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: 'https://api.bintray.com/maven/twofortyfouram/maven/android-memento-api') {
                authentication(userName: TWOFORTYFOURAM_MONOREPO_MAVEN_USERNAME, password: TWOFORTYFOURAM_MONOREPO_MAVEN_PASSWORD)
            }
            pom.project {
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }
            }
        }
    }
}

// Workaround for naming conflict between maven and android plugins
// http://stackoverflow.com/questions/18559932/gradle-maven-plugin-install-task-does-not-work-with-android-library-project
task installArchives(type: Upload) {
    description "Installs artifacts to mavenLocal."
    repositories.mavenInstaller {
        configuration = configurations.default
    }
}

android.libraryVariants.all { variant ->
    createJavaDocTaskForVariant(variant, "com/twofortyfouram/memento", "com_twofortyfouram_memento")
}
